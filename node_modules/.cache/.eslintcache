[{"/Users/esharky/Dev/dashtoon/src/index.js":"1","/Users/esharky/Dev/dashtoon/src/App.js":"2","/Users/esharky/Dev/dashtoon/src/reportWebVitals.js":"3","/Users/esharky/Dev/dashtoon/src/components/ComicStrip.js":"4","/Users/esharky/Dev/dashtoon/src/components/Nav.js":"5","/Users/esharky/Dev/dashtoon/src/components/Panel.js":"6"},{"size":535,"mtime":1700832627515,"results":"7","hashOfConfig":"8"},{"size":1739,"mtime":1700832627510,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1700832627515,"results":"10","hashOfConfig":"8"},{"size":1271,"mtime":1700834737030,"results":"11","hashOfConfig":"8"},{"size":404,"mtime":1700832627510,"results":"12","hashOfConfig":"8"},{"size":7532,"mtime":1700833155034,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1iub4c3",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"17"},"/Users/esharky/Dev/dashtoon/src/index.js",[],[],["35","36","37","38","39","40"],"/Users/esharky/Dev/dashtoon/src/App.js",["41"],[],"import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport ComicStrip from './components/ComicStrip';\n// import Comics from './components/Comics';\n\nfunction App() {  \n\n  const refInfo = useRef(null)\n  const [showInfo, setShowInfo] = useState(true)\n\n  const handleClick = () => {\n    refInfo.current.style.display = 'none'\n  }\n\n  useEffect(() => {\n    if(showInfo) {\n      refInfo.current.style.display = 'block'\n    } else {\n      refInfo.current.style.display = 'none'\n    }\n  \n    return () => {\n    }\n  }, [showInfo])\n  \n\n  return (\n    <div className=\"App\">\n      <div id='information' ref={refInfo} >\n        <button id='infoClose' onClick={() => setShowInfo(!showInfo)}></button>\n        <ul>\n          <li>In Nav section there are two button</li>\n          <li>Edit or Read button to toggle between edit and read mode</li>\n          <li>In read mode you can zoom image by hovering over it</li>\n          <li>In Edit mode you you can make changes in the available 10 panels</li>\n          <li>There are 10 image boxes for each panel</li>\n          <li>In each image there is + (add) button to open prompt and load image from api</li>\n          <li>when you open propmt you also get a option to edit image (speech bubble functionality) in the to p right corner</li>\n          <li>press arrow button in bottom right to load image from api</li>\n          <li>once the request is sent a loading GIF appears</li>\n          <li>And once the image is loaded image is shown in place of loading GIF</li>\n          <li>Using edit mode you can add speech bubble as stated earlier</li>\n        </ul>\n      </div>\n      {/* <Comics /> */}\n      <ComicStrip setShowInfo={setShowInfo} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/esharky/Dev/dashtoon/src/reportWebVitals.js",[],[],"/Users/esharky/Dev/dashtoon/src/components/ComicStrip.js",["42","43"],[],"/Users/esharky/Dev/dashtoon/src/components/Nav.js",[],[],"/Users/esharky/Dev/dashtoon/src/components/Panel.js",["44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Panel.css\";\nimport addIcon from \"../images/add.svg\";\nimport imgSpider from \"../images/spider.webp\";\nimport imgSend from \"../images/send.svg\";\nimport imgLoading from \"../images/loading.svg\";\nimport imgAdd2 from \"../images/add2.png\";\nimport imgNoImage from \"../images/noImage.png\";\nimport * as markerjs2 from \"markerjs2\";\n\nexport default function Panel(props) {\n  const { img, index, resize, edit } = props;\n\n  const refPanel = useRef(null);\n  const refPanelBox = useRef(null);\n  const refDefaultImg = useRef(null);\n  const refImg = useRef(null);\n  const refImgBox = useRef(null);\n  const refLoading = useRef(null);\n  const refImgSrc = useRef(null);\n\n  const [input, setInput] = useState(\"\");\n  const [toggle, setToggle] = useState(false);\n  const [panelWidth, setPanelWidth] = useState(\"\");\n  const [panelHeight, setPanelHeight] = useState(\"\");\n  const [imgSrc, setImgSrc] = useState(imgNoImage);\n  const [dialogue, setDialogue] = useState(\"\");\n\n  const openPromt = () => {\n    document.body.style.overflow = \"hidden\";\n\n    const panel = refPanel.current;\n    const panelBox = refPanelBox.current;\n    const defaultImg = refDefaultImg.current;\n    const img = refImg.current;\n    const imgBox = refImgBox.current;\n\n    const offSetLeft = panelBox.getBoundingClientRect().left;\n    const offSetTop = panelBox.getBoundingClientRect().top;\n    const windowWidth = window.innerWidth;\n    const windowheight = window.innerHeight;\n\n    panel.style.transform = `translate(${-offSetLeft}px, ${-offSetTop}px)`;\n    setPanelWidth(panel.style.height);\n    setPanelHeight(panel.style.height);\n    // panel.style.width = `${windowWidth}px`\n    // panel.style.height = `${windowheight}px`\n    panel.style.width = `100vw`;\n    panel.style.height = `100vh`;\n    panel.style.zIndex = 4;\n\n    defaultImg.style.margin = `20px`;\n    defaultImg.style.transform = `rotate(45deg)`;\n\n    imgBox.style.display = \"grid\";\n\n    console.log(offSetLeft, ` translate(${offSetLeft + 20}px)`);\n  };\n\n  const closePrompt = () => {\n    document.body.style.overflowY = \"scroll\";\n    console.log(\"close\");\n\n    const panel = refPanel.current;\n    const panelBox = refPanelBox.current;\n    const defaultImg = refDefaultImg.current;\n    const img = refImg.current;\n    const imgBox = refImgBox.current;\n\n    panel.style.transform = `translate(0px, 0px)`;\n    panel.style.width = `360px`;\n    panel.style.height = `360px`;\n    panel.style.zIndex = 1;\n\n    defaultImg.style.margin = `calc(50% - 25px) calc(50% - 25px)`;\n    defaultImg.style.transform = `rotate(0deg)`;\n\n    imgBox.style.display = \"none\";\n  };\n\n  async function query(data) {\n    console.log(data);\n    try {\n      const response = await fetch(\n        \"https://xdwvg9no7pefghrn.us-east-1.aws.endpoints.huggingface.cloud\",\n        {\n          headers: {\n            Accept: \"image/png\",\n            Authorization:\n              \"Bearer VknySbLLTUjbxXAXCjyfaFIPwUTCeRXbFSOjwRiCxsxFyhbnGjSFalPKrpvvDAaPVzWEevPljilLVDBiTzfIbWFdxOkYJxnOPoHhkkVGzAknaOulWggusSFewzpqsNWM\",\n            \"Content-Type\": \"application/json\",\n          },\n          method: \"POST\",\n          body: JSON.stringify(data),\n        }\n      );\n      console.log(\"Fetched data from server\");\n      const result = await response.blob();\n      console.log(\"changed data to blob\");\n      return { successful: true, result: result };\n    } catch (error) {\n      return {\n        successful: false,\n        result: \"Something went wrong try again after some time\",\n      };\n    }\n  }\n\n  const handleRequest = (e) => {\n    const loading = refLoading.current;\n    loading.style.display = \"flex\";\n    query({ inputs: input })\n      .then((response) => {\n        if (response.successful)\n          setImgSrc(URL.createObjectURL(response.result));\n        else {\n          alert(\"1: \" + response.result);\n          console.log(\"1: \" + response.result);\n        }\n        loading.style.display = \"none\";\n      })\n      .catch((err) => {\n        loading.style.display = \"none\";\n        console.log(err);\n        alert(\"2: \" + err);\n      });\n  };\n\n  useEffect(() => {\n    if (edit) {\n      const panel = refPanel.current;\n      // panel.style.transition = `0.5s cubic-bezier(0.075, 0.82, 0.165, 1)`\n      if (toggle) {\n        openPromt();\n      } else {\n        closePrompt();\n      }\n      console.log(toggle);\n    }\n    return () => {};\n  }, [toggle]);\n\n  useEffect(() => {\n    if (edit && toggle) {\n      const panel = refPanel.current;\n      // panel.style.transition = `0s`\n      openPromt();\n    }\n    return () => {};\n  }, [resize]);\n\n  const handleAbort = () => {\n    console.log(\"abort\");\n    const loading = refLoading.current;\n    loading.style.display = \"none\";\n  };\n\n  const handleScaleUp = () => {\n    const panel = refPanel.current;\n    panel.style.transform = `scale(1.5)`;\n    panel.style.zIndex = 200;\n  };\n  const handleScaleDown = () => {\n    const panel = refPanel.current;\n    panel.style.transform = `scale(1)`;\n    panel.style.zIndex = 1;\n  };\n\n  const showMarkerArea = () => {\n    if (refImgSrc.current !== null) {\n      const defaultImg = refDefaultImg.current;\n      defaultImg.style.display = \"none\";\n      // create a marker.js MarkerArea\n      const markerArea = new markerjs2.MarkerArea(refImgSrc.current);\n      // attach an event handler to assign annotated image back to our image element\n      markerArea.addEventListener(\"render\", (event) => {\n        if (refImgSrc.current) {\n          refImgSrc.current.src = event.dataUrl;\n        }\n      });\n\n      markerArea.addEventListener(\"close\", (event) => {\n        defaultImg.style.display = \"block\";\n      });\n      // launch marker.js\n      markerArea.show();\n    }\n  };\n\n  return (\n    <div className=\"PanelBox\" ref={refPanelBox}>\n      <div\n        className=\"Panel\"\n        ref={refPanel}\n        onMouseEnter={(e) => {\n          if (!edit) handleScaleUp();\n        }}\n        onMouseLeave={(e) => {\n          if (!edit) handleScaleDown();\n        }}\n      >\n        <div className=\"Loading\" ref={refLoading}>\n          <img src={imgLoading} />\n          <button className=\"Edit\" onClick={(e) => handleAbort()}>\n            Cancel\n          </button>\n        </div>\n        {edit ? (\n          <button\n            ref={refDefaultImg}\n            className=\"DefaultImg\"\n            onClick={() => setToggle(toggle ? false : true)}\n          ></button>\n        ) : (\n          \"\"\n        )}\n        <div className=\"ImgBox\">\n          {toggle ? <button onClick={() => showMarkerArea()}></button> : ``}\n          <img\n            ref={refImgSrc}\n            src={imgSrc}\n            className=\"Img\"\n            style={\n              imgSrc == imgNoImage\n                ? { filter: `brightness(3.5) drop-shadow(2px 4px 9px black)` }\n                : { boxShadow: `0 0 12px -4px` }\n            }\n          />\n          {/* <div className='Dialogue'><span>{dialogue}</span></div> */}\n        </div>\n        <div className=\"InputBox\" ref={refImgBox}>\n          <input\n            placeholder=\"Enter Prompt for image here\"\n            className=\"Input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          {/* <input maxLength={80} placeholder='Enter text for speech bubble' className='DialogueInput' value={dialogue} onChange={e => setDialogue(e.target.value)} /> */}\n          <button onClick={(e) => handleRequest(e)}>\n            <img ref={refImg} className=\"Send\" src={imgSend} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":11,"column":9,"nodeType":"80","messageId":"81","endLine":11,"endColumn":20},{"ruleId":"78","severity":1,"message":"82","line":1,"column":28,"nodeType":"80","messageId":"81","endLine":1,"endColumn":34},{"ruleId":"78","severity":1,"message":"83","line":21,"column":18,"nodeType":"80","messageId":"81","endLine":21,"endColumn":27},{"ruleId":"78","severity":1,"message":"84","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":15},{"ruleId":"78","severity":1,"message":"85","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":17},{"ruleId":"78","severity":1,"message":"86","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":15},{"ruleId":"78","severity":1,"message":"87","line":12,"column":11,"nodeType":"80","messageId":"81","endLine":12,"endColumn":14},{"ruleId":"78","severity":1,"message":"88","line":12,"column":16,"nodeType":"80","messageId":"81","endLine":12,"endColumn":21},{"ruleId":"78","severity":1,"message":"89","line":24,"column":10,"nodeType":"80","messageId":"81","endLine":24,"endColumn":20},{"ruleId":"78","severity":1,"message":"90","line":25,"column":10,"nodeType":"80","messageId":"81","endLine":25,"endColumn":21},{"ruleId":"78","severity":1,"message":"91","line":27,"column":10,"nodeType":"80","messageId":"81","endLine":27,"endColumn":18},{"ruleId":"78","severity":1,"message":"92","line":27,"column":20,"nodeType":"80","messageId":"81","endLine":27,"endColumn":31},{"ruleId":"78","severity":1,"message":"87","line":35,"column":11,"nodeType":"80","messageId":"81","endLine":35,"endColumn":14},{"ruleId":"78","severity":1,"message":"93","line":40,"column":11,"nodeType":"80","messageId":"81","endLine":40,"endColumn":22},{"ruleId":"78","severity":1,"message":"94","line":41,"column":11,"nodeType":"80","messageId":"81","endLine":41,"endColumn":23},{"ruleId":"78","severity":1,"message":"95","line":65,"column":11,"nodeType":"80","messageId":"81","endLine":65,"endColumn":19},{"ruleId":"78","severity":1,"message":"87","line":67,"column":11,"nodeType":"80","messageId":"81","endLine":67,"endColumn":14},{"ruleId":"78","severity":1,"message":"96","line":131,"column":13,"nodeType":"80","messageId":"81","endLine":131,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":141,"column":6,"nodeType":"99","endLine":141,"endColumn":14,"suggestions":"100"},{"ruleId":"78","severity":1,"message":"96","line":145,"column":13,"nodeType":"80","messageId":"81","endLine":145,"endColumn":18},{"ruleId":"97","severity":1,"message":"101","line":150,"column":6,"nodeType":"99","endLine":150,"endColumn":14,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":203,"column":11,"nodeType":"105","endLine":203,"endColumn":35},{"ruleId":"103","severity":1,"message":"104","line":219,"column":11,"nodeType":"105","endLine":228,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":224,"column":22,"nodeType":"108","messageId":"109","endLine":224,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":240,"column":13,"nodeType":"105","endLine":240,"endColumn":64},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["110"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-unused-vars","'handleClick' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'setPanels' is assigned a value but never used.","'addIcon' is defined but never used.","'imgSpider' is defined but never used.","'imgAdd2' is defined but never used.","'img' is assigned a value but never used.","'index' is assigned a value but never used.","'panelWidth' is assigned a value but never used.","'panelHeight' is assigned a value but never used.","'dialogue' is assigned a value but never used.","'setDialogue' is assigned a value but never used.","'windowWidth' is assigned a value but never used.","'windowheight' is assigned a value but never used.","'panelBox' is assigned a value but never used.","'panel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'edit'. Either include it or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'edit' and 'toggle'. Either include them or remove the dependency array.",["112"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-object-constructor",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [edit, toggle]",{"range":"117","text":"118"},"Update the dependencies array to be: [edit, resize, toggle]",{"range":"119","text":"120"},[4393,4401],"[edit, toggle]",[4579,4587],"[edit, resize, toggle]"]