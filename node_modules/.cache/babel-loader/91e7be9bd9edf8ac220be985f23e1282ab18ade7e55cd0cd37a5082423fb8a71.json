{"ast":null,"code":"var _jsxFileName = \"/Users/esharky/Dev/dashtoon/src/components/ComicStrip.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Panel from \"./Panel\";\nimport \"./ComicStrip.css\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComicStrip(props) {\n  _s();\n  const {\n    setShowInfo\n  } = props;\n  const images = [{\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }, {\n    img: \"\"\n  }];\n  const [panels, setPanels] = useState(images);\n  const [resize, setResize] = useState(0);\n  const [edit, setEdit] = useState(true);\n  const handleResize = () => {\n    setResize(window.innerWidth + window.innerHeight);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.addEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"ComicStrip\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Make your own Comic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"- Aadeesh Oswal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {\n      edit: edit,\n      setEdit: val => setEdit(val),\n      setShowInfo: setShowInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), panels.map((obj, index) => {\n      return /*#__PURE__*/_jsxDEV(Panel, {\n        index: index,\n        img: obj.img,\n        resize: resize,\n        edit: edit\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ComicStrip, \"TvXaCLGqt+fACZmHQV0plF10Zpg=\");\n_c = ComicStrip;\nvar _c;\n$RefreshReg$(_c, \"ComicStrip\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Panel","Nav","jsxDEV","_jsxDEV","ComicStrip","props","_s","setShowInfo","images","img","panels","setPanels","resize","setResize","edit","setEdit","handleResize","window","innerWidth","innerHeight","addEventListener","id","children","fileName","_jsxFileName","lineNumber","columnNumber","val","map","obj","index","_c","$RefreshReg$"],"sources":["/Users/esharky/Dev/dashtoon/src/components/ComicStrip.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Panel from \"./Panel\";\nimport \"./ComicStrip.css\";\nimport Nav from \"./Nav\";\n\nexport default function ComicStrip(props) {\n  const { setShowInfo } = props;\n\n  const images = [\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n    { img: \"\" },\n  ];\n  const [panels, setPanels] = useState(images);\n  const [resize, setResize] = useState(0);\n  const [edit, setEdit] = useState(true);\n\n  const handleResize = () => {\n    setResize(window.innerWidth + window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.addEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return (\n    <div id=\"ComicStrip\">\n      <h1>Make your own Comic</h1>\n      <p>- Aadeesh Oswal</p>\n      <Nav\n        edit={edit}\n        setEdit={(val) => setEdit(val)}\n        setShowInfo={setShowInfo}\n      />\n      {panels.map((obj, index) => {\n        return (\n          <Panel\n            key={index}\n            index={index}\n            img={obj.img}\n            resize={resize}\n            edit={edit}\n          />\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,kBAAkB;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,UAAUA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAY,CAAC,GAAGF,KAAK;EAE7B,MAAMG,MAAM,GAAG,CACb;IAAEC,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,EACX;IAAEA,GAAG,EAAE;EAAG,CAAC,CACZ;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACS,MAAM,CAAC;EAC5C,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMiB,YAAY,GAAGA,CAAA,KAAM;IACzBH,SAAS,CAACI,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,CAAC;EACnD,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdoB,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXC,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACjD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKkB,EAAE,EAAC,YAAY;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BvB,OAAA;MAAAmB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtBvB,OAAA,CAACF,GAAG;MACFa,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAGY,GAAG,IAAKZ,OAAO,CAACY,GAAG,CAAE;MAC/BpB,WAAW,EAAEA;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACDhB,MAAM,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MAC1B,oBACE3B,OAAA,CAACH,KAAK;QAEJ8B,KAAK,EAAEA,KAAM;QACbrB,GAAG,EAAEoB,GAAG,CAACpB,GAAI;QACbG,MAAM,EAAEA,MAAO;QACfE,IAAI,EAAEA;MAAK,GAJNgB,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpB,EAAA,CArDuBF,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}