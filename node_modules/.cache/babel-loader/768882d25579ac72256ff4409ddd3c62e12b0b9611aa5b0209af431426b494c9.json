{"ast":null,"code":"var _jsxFileName = \"/Users/esharky/Dev/dashtoon/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport ComicStrip from './components/ComicStrip';\n// import Comics from './components/Comics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const refInfo = useRef(null);\n  const [showInfo, setShowInfo] = useState(true);\n  const handleClick = () => {\n    refInfo.current.style.display = 'none';\n  };\n  useEffect(() => {\n    if (showInfo) {\n      refInfo.current.style.display = 'block';\n    } else {\n      refInfo.current.style.display = 'none';\n    }\n    return () => {};\n  }, [showInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"information\",\n      ref: refInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"infoClose\",\n        onClick: () => setShowInfo(!showInfo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"In Nav section there are two button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Edit or Read button to toggle between edit and read mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"In read mode you can zoom image by hovering over it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"In Edit mode you you can make changes in the available 10 panels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"There are 10 image boxes for each panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"In each image there is + (add) button to open prompt and load image from api\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"when you open propmt you also get a option to edit image (speech bubble functionality) in the to p right corner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"press arrow button in bottom right to load image from api\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"once the request is sent a loading GIF appears\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"And once the image is loaded image is shown in place of loading GIF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Using edit mode you can add speech bubble as stated earlier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ComicStrip, {\n      setShowInfo: setShowInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wnPtF9+x0aPUEeXFlj9Fw69ifOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","ComicStrip","jsxDEV","_jsxDEV","App","_s","refInfo","showInfo","setShowInfo","handleClick","current","style","display","className","children","id","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/esharky/Dev/dashtoon/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport ComicStrip from './components/ComicStrip';\n// import Comics from './components/Comics';\n\nfunction App() {  \n\n  const refInfo = useRef(null)\n  const [showInfo, setShowInfo] = useState(true)\n\n  const handleClick = () => {\n    refInfo.current.style.display = 'none'\n  }\n\n  useEffect(() => {\n    if(showInfo) {\n      refInfo.current.style.display = 'block'\n    } else {\n      refInfo.current.style.display = 'none'\n    }\n  \n    return () => {\n    }\n  }, [showInfo])\n  \n\n  return (\n    <div className=\"App\">\n      <div id='information' ref={refInfo} >\n        <button id='infoClose' onClick={() => setShowInfo(!showInfo)}></button>\n        <ul>\n          <li>In Nav section there are two button</li>\n          <li>Edit or Read button to toggle between edit and read mode</li>\n          <li>In read mode you can zoom image by hovering over it</li>\n          <li>In Edit mode you you can make changes in the available 10 panels</li>\n          <li>There are 10 image boxes for each panel</li>\n          <li>In each image there is + (add) button to open prompt and load image from api</li>\n          <li>when you open propmt you also get a option to edit image (speech bubble functionality) in the to p right corner</li>\n          <li>press arrow button in bottom right to load image from api</li>\n          <li>once the request is sent a loading GIF appears</li>\n          <li>And once the image is loaded image is shown in place of loading GIF</li>\n          <li>Using edit mode you can add speech bubble as stated earlier</li>\n        </ul>\n      </div>\n      {/* <Comics /> */}\n      <ComicStrip setShowInfo={setShowInfo} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}